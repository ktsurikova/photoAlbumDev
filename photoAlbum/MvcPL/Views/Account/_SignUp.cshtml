@using System.Web.Optimization
@model MvcPL.Models.SignUpViewModel

<div class="registerForm">
    @using (Html.BeginForm("SignUp", "Account", FormMethod.Post,
                        new { }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Login, new { @class = "" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Login, new { @class = "form-control", placeholder="Login" })
                @Html.ValidationMessageFor(m => m.Login, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confim password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group center">
            <div class=" center">
                <input type="submit" class="btn btn-default signUpButton" value="Sign Up" />
            </div>
        </div>
    }
</div>

@Scripts.Render("~/bundles/jqueryOnly")
@Scripts.Render("~/bundles/jqueryval")

